version: '3.8'

services:
  geocoding-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mcp-geocoding-api
    ports:
      - "4000:4000"
    environment:
      - HOST=0.0.0.0
      - PORT=4000
      - DEBUG=false
      - LOG_LEVEL=INFO
      - GEOCODING_PROVIDER=amap
      - GEOCODING_TIMEOUT=10
      - GEOCODING_RETRY_TIMES=3
      - CACHE_ENABLED=true
      - CACHE_TTL=3600
      - CACHE_MAX_SIZE=1000
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_REQUESTS=100
      - RATE_LIMIT_WINDOW=60
      # API密钥需要在.env文件中设置或通过环境变量传入
      - AMAP_API_KEY=${AMAP_API_KEY:-}
      - BAIDU_API_KEY=${BAIDU_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:4000/health', timeout=10)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - geocoding-network

  # 可选：添加Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: mcp-geocoding-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - geocoding-network
    profiles:
      - with-redis

  # 可选：添加Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: mcp-geocoding-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - geocoding-api
    restart: unless-stopped
    networks:
      - geocoding-network
    profiles:
      - with-nginx

volumes:
  redis_data:

networks:
  geocoding-network:
    driver: bridge